{"version":3,"sources":["components/ProfilePhoto.js","components/ProfileName.js","components/ProfileHeadline.js","components/ProfileDescription.js","components/ProfileCard.js","components/MessagePhoto.js","components/MessageName.js","components/MessageBody.js","components/MessageCard.js","components/MessageColumn.js","components/PetPhoto.js","components/PetName.js","components/PetCard.js","components/PetList.js","components/WebsiteTitle.js","components/HomeButton.js","components/PeopleButton.js","components/AccountButton.js","components/NavBar.js","components/App.js","serviceWorker.js","index.js"],"names":["ProfilePhoto","props","Fragment","src","photo","alt","ProfileName","name","ProfileHeadline","headline","ProfileDescription","description","ProfileCard","style","backgroundColor","fontFamily","paddingTop","border","padding","text","textAlign","Container","Row","Col","width","md","MessagePhoto","maxHeight","MessageName","alignItems","MessageBody","body","MessageCard","Button","variant","block","MasterMessageColumn","MessageColumn","map","message","index","PetPhoto","PetName","fontWeight","PetCard","masterPetList","imgSrc","PetList","pet","key","WebsiteTitle","HomeButton","PeopleButton","AccountButton","NavBar","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.76ec36c5.chunk.js","sourcesContent":["import React from \"react\";\n// import logo from './../logo192.png';\n\n\nfunction ProfilePhoto(props){\n  return (\n    <React.Fragment>\n      <img src={props.photo} alt=\"alt\"/>\n    </React.Fragment>\n  );\n}\n\nexport default ProfilePhoto;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ProfileName(props) {\n  return (\n    <React.Fragment>\n      <h4>{props.name}</h4>\n    </React.Fragment>\n  );\n}\n\nProfileName.propTypes = {\n  name: PropTypes.string\n}\n\nexport default ProfileName;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction ProfileHeadline(props) {\n  return(\n    <React.Fragment>\n      <h4>{props.headline}</h4>\n    </React.Fragment>\n  );\n}\n\nProfileHeadline.propTypes = {\n  headline: PropTypes.string\n};\n\nexport default ProfileHeadline;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction ProfileDescription(props) {\n  return(\n    <React.Fragment>\n      <p>{props.description}</p>\n    </React.Fragment>\n  );\n}\n\nProfileDescription.propTypes = {\n  description: PropTypes.string\n};\n\nexport default ProfileDescription;","import React from \"react\";\nimport ProfilePhoto from \"./ProfilePhoto\";\nimport ProfileName from \"./ProfileName\";\nimport ProfileHeadline from \"./ProfileHeadline\";\nimport ProfileDescription from \"./ProfileDescription\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction ProfileCard() {\n  const lorem = \"Been a tiger momma for 29 years and proud of it! I bet my nine lives on you-oooo-ooo-hooo. stare at owner accusingly then wink, yet allways wanting food. Stare out the window rub my belly hiss scratch the box. Toy mouse squeak roll over trip on catnip and chase the pig around the house or i like fish, immediately regret falling into bathtub. Be superior walk on keyboard meowing non stop for food. Hate dog chase mice, so sleep yet paw at beetle and eat it before it gets away but sleep nap yet chase laser.\"\n\n  const profileStyles = {\n    backgroundColor: '#ecf0f1',\n    fontFamily: 'sans-serif',\n    paddingTop: '50px',\n    border: '2px solid red',\n    padding: '3%',\n    text: 'center',\n    textAlign: 'center'\n  }\n  const centerPhoto = {\n    textAlign: 'center'\n  }\n    return (\n    <React.Fragment>\n      <div style={profileStyles}>\n      <Container >\n        <Row>\n          <Col>\n            <div style={centerPhoto}>\n              <ProfilePhoto style={{width: '90%'}} photo=\"https://www.abc.net.au/news/image/10693098-3x2-940x627.jpg\"/>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n            <ProfileName name=\"Jordan\"/>\n          </Col>\n          <Col md={6}>\n            <ProfileHeadline headline=\"Tiger queen\"/>\n          </Col>\n        </Row>\n        <Row>\n          <ProfileDescription description={lorem}/>       \n        </Row>\n      </Container>\n      </div>\n\n    </React.Fragment>\n  );\n}\n\nexport default ProfileCard;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nfunction MessagePhoto(props) {\n  return (\n    <React.Fragment>\n        <img style={{maxHeight: '100px'}} src={props.photo} alt=\"message\"/>\n    </React.Fragment>\n  );\n}\n\nMessagePhoto.propTypes = {\n  photo: PropTypes.string\n}\n\nexport default MessagePhoto;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction MessageName(props){\n  const MessageNameStyles = {\n    alignItems: 'center'\n  }\n  return(\n    <React.Fragment>\n      <div style={MessageNameStyles}>\n        <p>{props.name}</p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nMessageName.propTypes = {\n  name: PropTypes.string\n}\nexport default MessageName;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nfunction MessageBody(props) {\n  return (\n    <React.Fragment>\n      <p>{props.body}</p>\n    </React.Fragment>\n  );\n}\n\nMessageBody.propTypes = {\n  body: PropTypes.string,\n}\n\nexport default MessageBody;","import React from \"react\";\nimport MessagePhoto from './MessagePhoto';\nimport MessageName from './MessageName';\nimport MessageBody from './MessageBody';\nimport { Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction MessageCard(props){\n  const messageStyles = {\n    padding: '3%'\n  }\n\n  return(\n    <React.Fragment>\n      <div style={messageStyles}>\n        {/* <Card> */}\n        <Container>\n          <Row>\n            <Col>\n            <MessagePhoto photo={props.photo}/>\n            </Col>\n            <Col>\n              <MessageName name={props.name}/>\n              <MessageBody body={props.body}/>\n            </Col>\n          </Row>\n          <Row>\n            <Button variant=\"primary\" block>This is the one!</Button>\n          </Row>\n        </Container>\n        {/* </Card> */}\n        <hr />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default MessageCard;","import React from \"react\";\nimport MessageCard from \"./MessageCard\";\n\nconst MasterMessageColumn = [\n  {  \n    body: \"Can I be your tiger King..?\",\n    photo: \"https://i.ytimg.com/vi/Inf0oiHG6Ro/maxresdefault.jpg\",\n    name: \"Many Hamilton\"\n  },\n  {  \n    body: \"I like tigers. rawr hahah\",\n    photo: \"https://memeguy.com/photos/images/mrw-i-am-trying-to-look-sexy-in-the-morning-for-my-girlfriend-66540.gif\",\n    name: \"Josh Sparkman\"\n  },\n  {  \n    body: \"Hey :)\",\n    photo: \"https://a.wattpad.com/cover/78543707-288-k654287.jpg\",\n    name: \"Damien\"\n  }\n]\n\nfunction MessageColumn(){\n  const MessageColStyles = {\n    border: '2px solid blue'\n  }\n\n  return (\n    <React.Fragment >\n    <div style={MessageColStyles}>\n      <h1>Messages</h1>\n      {MasterMessageColumn.map((message, index) =>\n      <MessageCard body={message.body} photo={message.photo} name={message.name}/>\n      )}\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default MessageColumn;","import React from 'react';\n// import logo from './../logo192.png';\n\nfunction PetPhoto(props) {\n  const PetPhotoStyles = {\n    textAlign: 'center'\n  }\n  return (\n    <React.Fragment>\n      <div style={PetPhotoStyles}>\n        <img style={{maxHeight: '200px'}} src={props.photo} alt=\"pet\"/>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default PetPhoto;","import React from 'react';\n\nfunction PetName(props) {\n  const PetNameStyles = {\n    textAlign: 'center',\n    fontWeight: 'bolder'\n  }\n  return (\n    <React.Fragment>\n      <div style={PetNameStyles}>\n        <h3>{props.name}</h3>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default PetName;","import React from 'react';\nimport PetPhoto from './PetPhoto';\nimport PetName from './PetName';\nimport PropTypes from 'prop-types';\n\nfunction PetCard(props) {\n  const PetCardStyle={\n    padding: '3%'\n  }\n  return (\n    <React.Fragment>\n      <div style={PetCardStyle}>\n        <PetPhoto photo={props.photo}/>\n        <PetName name={props.name}/>\n        <hr/>\n      </div>\n    </React.Fragment>\n  );\n}\n\nPetCard.propTypes = {\n  name: PropTypes.string\n};\nexport default PetCard;","import React from 'react';\nimport PetCard from './PetCard';\n\n\nconst masterPetList = [\n  {\n    name: \"Margret\",\n    imgSrc: \"https://cdn.britannica.com/s:700x500/89/149189-050-68D7613E/Bengal-tiger.jpg\"\n  },\n  {\n    name: \"Tigger\",\n    imgSrc: \"https://i.pinimg.com/originals/47/a9/bb/47a9bbebcb72f513b7a3a2bcabae43ce.jpg\"\n  },\n  {\n    name: \"Raj\",\n    imgSrc: \"http://cdn4.i-scmp.com/sites/default/files/images/methode/2017/02/10/012d6b1c-ef5e-11e6-8960-2c6b8565de23_972x.jpg\"\n  },\n  {\n    name: \"Shere Khan\",\n    imgSrc: \"https://i.pinimg.com/564x/11/57/a3/1157a3905a2932b5a1cc365b088e7d07.jpg\"\n  }\n]\n\n\nfunction PetList() {\n  const PetListStyle={\n    border: '2px solid orange'\n  }\n  return (\n    <React.Fragment>\n      <div style={PetListStyle}>\n        <h1>Pets</h1>\n        {masterPetList.map((pet,index)=>\n          <PetCard name={pet.name} photo={pet.imgSrc} key={index}/>\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default PetList;","import React from \"react\";\n\nfunction WebsiteTitle(){\n  return(\n    <React.Fragment>\n      <h1>PetLovers Only</h1>\n    </React.Fragment>\n  );\n}\n\nexport default WebsiteTitle;","import React from \"react\"\n\nfunction HomeButton(){\n  return(\n    <React.Fragment>\n      <button>Home</button>\n    </React.Fragment>\n  );\n}\n\nexport default HomeButton;","import React from \"react\"\n\nfunction PeopleButton(){\n  return(\n    <React.Fragment>\n      <button>People</button>\n    </React.Fragment>\n  );\n}\n\nexport default PeopleButton;","import React from \"react\"\n\nfunction AccountButton(){\n  return(\n    <React.Fragment>\n      <button>Account</button>\n    </React.Fragment>\n  );\n}\n\nexport default AccountButton;","import React from \"react\";\nimport WebsiteTitle from \"./WebsiteTitle\"\nimport HomeButton from \"./HomeButton\"\nimport PeopleButton from \"./PeopleButton\"\nimport AccountButton from \"./AccountButton\"\n\nfunction NavBar(){\n  return(\n    <React.Fragment>\n      <WebsiteTitle />\n      <HomeButton/>\n      <PeopleButton/>\n      <AccountButton/>\n    </React.Fragment>\n  );\n}\n\nexport default NavBar;","import React from 'react';\nimport ProfileCard from \"./ProfileCard\";\nimport MessageColumn from \"./MessageColumn\";\nimport PetList from \"./PetList\";\nimport NavBar from \"./NavBar\";\nimport './../index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction App() {\n  \n  return (\n    <React.Fragment>\n      <Container>\n        <Row>\n          <NavBar />\n        </Row>\n        <Row>\n          <Col md={4}>\n            <ProfileCard/>\n          </Col>\n          <Col md={4}>\n            <PetList/>\n          </Col>          \n          <Col md={4}>\n            <MessageColumn />\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}